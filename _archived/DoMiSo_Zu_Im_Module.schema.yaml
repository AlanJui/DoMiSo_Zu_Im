# Rime schema
# encoding: utf-8

schema:
  schema_id: DoMiSo_Zu_Im
  name: 135拼音法【注音符號】
  version: "0.0.2.11"
  author:
    - 居正中 AlanJui <alanjui.1960@gmail.com>
  description: |
    【拼音系統】：135拼音法（DoMiSo拼音法）
    【字典編碼】：漢字讀音編碼採【台羅拼音】/【台灣拼音+（TLPA+）】
    【輸入類型】：注音輸入法
    【注音符號】：極簡化方音符號，適合懶地背記按鍵位置的使用者。
    【特性簡介】：
      1.  羅馬拼音字母，鼻化韻母採「前綴識別標示法」，如：siann ==> siaⁿ1 ==> sⁿia1 ）
      2. 【侯選清單】：採兩欄標示〔siaⁿ¹〕【ㄒㄧㆩˉ】
      3. 【聲調標示】：
          (a) 採【台羅八聲調】；
          (b) 使用數值標示聲調，以利閱讀。

switches:
  - name: ascii_mode
    reset: 0
    states: [漢文, ABC]
  - name: full_shape
    reset: 0
    states: [半形, 全形]

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    # - table_translator@custom_phrase
    - script_translator
  filters:
    - simplifier
    - uniquifier

speller:
  alphabet: "!1qa2wsxEedNcRrfvYyhnuUjJ8*iIk,<9(lL;oMO0mp/Kbtgz43657[].=-"
  initials: "!1qa2wsxEedNcRrfvYyhnuUjJ8*iIk,<9(lL;oMO0mp/Kbtgz.=-"
  finals: " 43657[]"
  delimiter: "'"
  use_space: true
  #==========================================================================
  # 定義【注音符號】編碼及【鍵盤按鍵】對映之【注音編碼】
  #==========================================================================
  algebra:
    __patch:
      - DoMiSo_Libs:/dict_to_keyboard

translator:
  dictionary: DoMiSo_peh_ue
  prism: DoMiSo_Zu_Im
  spelling_hints: 20
  always_show_comments: true
  initial_quality: 0.75
  preedit_format:
    __patch:
      - DoMiSo_Libs:/key_in_process

  comment_format:
    #======================================================
    # 定義【候選字清單】
    #------------------------------------------------------
    # 令候選字視窗，可顯示兩組「拼音/注音」
    # 左邊：拼音（TLPA 拼音字母）；右邊：注音符號。
    #======================================================
    __patch:
      - DoMiSo_Libs:/hau_suan_tuann

key_binder:
  import_preset: default
  bindings:
    #---------------------------------------------------
    # 注音輸入法：使用【:】鍵，輸入【韻母】：ㆲ
    # - { when: composing, accept: colon, send: colon }
    # - { when: has_menu, accept: colon, send: colon  }
    #---------------------------------------------------
    # 拼音輸入法：使用【_】鍵，輸入【調號】：3 （低音調）
    # - { when: composing, accept: underscore, send: underscore }
    # - { when: has_menu, accept: underscore, send: underscore }
    #---------------------------------------------------
    # 拼音輸入法：使用【=】鍵，輸入【所有入聲尾】
    - { when: composing, accept: equal, send: equal }
    - { when: has_menu, accept: equal, send: equal }
    #---------------------------------------------------
    # 注音輸入法：使用【-】鍵，輸入【所有鼻化之元音韻母】
    # 拼音輸入法：使用【-】鍵，輸入【調號】：7 （中音調）
    - { when: composing, accept: minus, send: minus }
    - { when: has_menu, accept: minus, send: minus }
    #---------------------------------------------------
    # 注音輸入法：使用【.】鍵，輸入【鼻化之元音韻母前綴識別】
    # 拼音輸入法：使用 【.】鍵，輸入【調號】：0（輕聲及入聲調）
    - { when: composing, accept: period, send: period }
    - { when: has_menu, accept: period, send: period }
    #---------------------------------------------------
    # 拼音輸入法：使用【[】鍵，輸入【調號】：4（陰入調）
    - { when: composing, accept: bracketleft, send: bracketleft }
    - { when: has_menu, accept: bracketleft, send: bracketleft }
    #---------------------------------------------------
    # 拼音輸入法：使用【]】鍵，輸入【調號】：8（陽入調）
    - { when: composing, accept: bracketright, send: bracketright }
    - { when: has_menu, accept: bracketright, send: bracketright }
    #---------------------------------------------------
    # 【候選字清單】翻頁快捷鍵設定
    #---------------------------------------------------
    - { accept: "Control+p", send: Page_Up, when: composing }
    - { accept: "Control+n", send: Page_Down, when: composing }
    #---------------------------------------------------
    # 【候選字清單】以 VIM 模式，操作【游標】之移動，達到【上/下/翻到前頁/翻到後頁】操作
    #---------------------------------------------------
    - { when: has_menu, accept: "Control+h", send: Page_Up }
    - { when: has_menu, accept: "Control+l", send: Page_Down }
    - { when: has_menu, accept: "Control+k", send: Up }
    - { when: has_menu, accept: "Control+j", send: Down }

editor:
  bindings:
    space: commit                           # 選擇「備選漢字」
    Return: commit_composition              # 上屏原始的輸入：lau5
    Control+Return: commit_script_text      # 上屏顯示的輸入：lau⁵ / lâu
    Shift+Return: commit_comment            # 上屏候選項備注：ㄉㄚ˪〖柳交五〗
    Control+Shift+Return: commit_raw_input  # 將 Control+Return 綁定到 Lua 函數

menu:
  page_size: 5 #選單每䈎顯示個數
  alternative_select_labels: [①, ②, ③, ④, ⑤] # 修改候選標籤

style:
  horizontal: false
  font_face: "霞鶩文楷 TC, 新細明體"
  comment_font_face: "BopomofoRuby1909-v1, 新細明體"
  comment_font_size: 18

recognizer:
  import_preset: default
  patterns:
    email: ^[a-z][-_.0-9a-z]*@.*$
    uppercase: ^[A-Z][-_+.'0-9A-Za-z]*$
    url: ^(www[.]|https?:|ftp:|mailto:).*$
    reverse_lookup: "`[a-z]*$"
    # 用來辨識【輸入】是否為【標點符號】：「反引號開頭、接一字元的輸入」
    # (1) 「反引號」【`】表：觸發便捷輸入；
    # (2) [^\s] → 後面接一個「不是空白」的字元；
    # (3) $ → 且該字元必須剛好在字串的結尾。
    punct: '`[^\s]$'

punctuator:
  import_preset: keymap_piau_tian

# custom_phrase:
#   dictionary: ""
#   user_dict: custom_phrase
#   db_class: stabledb
#   enable_completion: false
#   enable_sentence: false
#   initial_quality: 1

# reverse_lookup:
#   dictionary: luna_pinyin
#   prefix: "`"
#   tips: 〔拼音〕
#   preedit_format:
#     - xform/([nljqxy])v/$1ü/

